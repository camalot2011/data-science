add2(4,5)
add2 <- function(x,y) {
x + y
}
add2(4,5)
install.packages("swirl")
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("C:/Users/zliao/Documents/testdir")
setwd("testdir")
info()
dir()
getwd()
skip()
swirl()
getwd()
nxt()
setwd("testdir")
file.create("mytest.r")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename(from "mytest.R",to "mytest2.R")
file.rename(from mytest.R, to mytest2.R)
file.exists("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1')
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
setwd(old.dir)
swirl()
library(swirl)
swirl()
x<-c(44,NA,5NA)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z))
my_data<-sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)& x>0]
x[c(1,3,5)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <-cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
! (5 == 7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5>8 || 6!= 8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
getwd()
setwd("C:/Users/zliao/Documents/Dataanalysis/ProgAssignment3-data")
list.files()
source("best.R")
best("TX", "heart attack")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
> head(outcome)
outcome[, c(11,17,23)] <- as.numeric(outcome[, c(11,17,23)])
outcome[,c(11,17,23)]
x <- subset(outcome, select =c(11,17,23))
source(best)
source("best.R")
best("TX", "heart attack")
best("MD", "pneumonia")
best("TX", "heart failure")
best("BB", "heart attack")
best("NY", "hert attack")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
debug(rank)
undebug(rank)
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
View(Sorted)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
?unique
x<-c("CA","CA","TX","TX")
unique(x)
names(outcome)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
debug(rankall)
head(rankall("heart attack", 20), 10)
undebug(rankall)
source("rankall.R")
head(rankall("heart attack", 20), 10)
debug(rankall)
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
debug(rankall)
head(rankall("heart attack", 20), 10)
View(selected)
View(Sorted)
View(Sorted)
View(ranking)
View(ranking)
All_states
All_states[2]
class(NA)
NA
length(NA)
x <- NA
class(x)
length(x)
x <- as.character(NA)
x
class(x)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
debug(rankall)
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
debug(rankall)
head(rankall("heart attack", 20), 10)
x <- unique(outcome$State)
y <- sort(x)
y <- order(x)
z <- x[y]
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
debug(rankall)
rankall("pneumonia", "worst")
View(Sorted)
View(Sorted)
source("rankall.R")
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
debug(rankall)
rankall("pneumonia","worst")
nn
View(selected)
View(selected)
View(selected_good)
View(Sorted)
View(ranking)
View(Sorted)
q
source("rankall.R")
rankall("pneumonia","worst")
debug(rankall)
rankall("pneumonia","worst")
View(Sorted)
View(Sorted)
View(ranking)
View(Sorted)
rankall("pneumonia","worst")
source("rankall.R")
rankall("pneumonia","worst")
source("rankall.R")
rankall("pneumonia","worst")
debug(rankall)
rankall("pneumonia","worst")
source("rankall.R")
rankall("pneumonia","worst")
tail(rankall("pneumonia", "worst"), 3)
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
debug(rankhospital)
rankhospital("NC", "heart attack", "worst")
View(Sorted)
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
View(r)
subset(r, State == "HI")$hospital
subset(r, state == "HI")$hospital
subset(r, "state" == "HI")$hospital
names(r)
class(r)
as.data.frame(r)
t <- as.data.frame(r)
names(t)
source("rankall.R")
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
getwd()
setwd(..)
setwd("C:/Users/zliao/Documents/Dataanalysis/")
list.files()
setwd("C:/Users/zliao/Documents/Dataanalysis/DataScience")
list.files()
setwd("C:/Users/zliao/Documents/Dataanalysis/DataScience/ProgrammingAssignment2")
source("cachematrix.R")
B <- matrix(c(1,2,3,4),2,2)
b
B
B1 <- makeCacheMatrix(B)
View(B1)
debug(cacheSolve)
cacheSolve(B1)
debug(makeCacheMatrix)
B1 <- makeCacheMatrix(B)
cacheSolve(B1)
cacheSolve(B1)
undebug(cacheSolve)
undebug(makeCacheMatrix)
cacheSolve(B1)
